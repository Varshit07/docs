.. _hasura_microservice_generate:

hasura microservice generate
----------------------------

Generate spec for a microservice

Synopsis
~~~~~~~~


Generate kubernetes spec files required for a microservice

::

  hasura microservice generate [microservice-name] [flags]

Examples
~~~~~~~~

::

    # Creates the configuration files required for a new microservice in the microservices directory:

    # To create a microservice without any quickstart template
      # Generate the microservice
        $ hasura microservice generate mymicroservice    
      # Expose the microservice by adding a route
        $ hasura conf generate-route mymicroservice >> conf/routes.yaml
      # Generate a remote if you are planning to add a Dockerfile and want to git push to deploy
        $ hasura conf generate-remote mymicroservice >> conf/ci.yaml

    # To create a microservice from existing microservice templates
      # Get a list of templates:
        $ hasura microservice template-list
      # To generate a microservice using a template (let's say you want to go with python-flask)
        $ hasura microservice generate mymicroservice --template=python-flask
      # Generate routes and remotes
        $ hasura conf generate-route mymicroservice >> conf/routes.yaml
        $ hasura conf generate-remote mymicroservice >> conf/ci.yaml

    # To create a microservice using any docker image
      # Generate the service
        $ hasura microservice generate mymicroservice --image library/ghost:latest --port 2368    
      # Generate and add a HTTPS URL route for the microservice:
        $ hasura conf generate-route mymicroservice >> conf/routes.yaml


Options
~~~~~~~

::

  -c, --cluster string    cluster on which the command has to be executed
  -h, --help              help for generate
  -i, --image string      Docker image to be used for the microservice
  -p, --port int32        Port on which the microservice will listen at (default 8080)
      --template string   Template to scaffold the microservice. Refer to https://github.com/hasura/microservice-templates for templates

Options inherited from parent commands
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

      --project string   hasura project directory where the commands should be executed. (default: current directory)

SEE ALSO
~~~~~~~~

* :ref:`hasura microservice <hasura_microservice>` 	 - Manage microservices on hasura

*Auto generated by spf13/cobra on 9-Nov-2017*
